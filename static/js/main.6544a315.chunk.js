(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(47)},11:function(e,t,n){e.exports=n(48)},16:function(e,t,n){"use strict";var o=n(0),a=o.createContext(null);t.a=a},2:function(e,t,n){"use strict";n.r(t),n.d(t,"isCallableVerb",function(){return s}),n.d(t,"stateRouteShape",function(){return i}),n.d(t,"push",function(){return c}),n.d(t,"replace",function(){return l}),n.d(t,"go",function(){return d}),n.d(t,"goBack",function(){return p}),n.d(t,"goForward",function(){return h}),n.d(t,"matchRoutes",function(){return m}),n.d(t,"route",function(){return g}),n.d(t,"addRoute",function(){return f}),n.d(t,"batchRoutes",function(){return b}),n.d(t,"removeRoute",function(){return v}),n.d(t,"batchRemoveRoutes",function(){return T}),n.d(t,"setParamsAndState",function(){return R}),n.d(t,"exitRoutes",function(){return E}),n.d(t,"enterRoutes",function(){return w}),n.d(t,"pending",function(){return k}),n.d(t,"commit",function(){return x});var o=n(5),a=n(1),r=n(3),s=function(e){return"push"===e||"replace"===e||"go"===e||"goBack"===e||"goForward"===e};function i(e){return{name:e.name,path:e.path,parent:e.parent,params:{},state:{}}}function u(e){return function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{type:r.a,payload:{verb:e,route:t,state:n}}}}var c=u("push"),l=u("replace");function d(e){return{type:r.a,payload:{verb:"go",distance:e}}}function p(){return{type:r.a,payload:{verb:"goBack"}}}function h(){return{type:r.a,payload:{verb:"goForward"}}}function m(e){return{type:r.h,payload:e}}function g(e){return{type:r.k,payload:e}}function f(e){return{type:r.e,payload:i(e)}}function y(e,t){return{type:t,payload:{ids:e.map(function(e){return e.name}),routes:e.reduce(function(e,t){return Object(a.a)({},e,Object(o.a)({},t.name,Object(a.a)({parent:t.parent},t,{params:{},state:{}})))},{})}}}function b(e){return y(e,r.c)}function v(e){return{type:r.j,payload:e}}function T(e){return y(e,r.b)}function R(e,t,n){return{type:r.l,payload:{route:e,params:t,state:n}}}function E(e){return{type:r.g,payload:e}}function w(e){return{type:r.f,payload:e}}function k(){return{type:r.i,payload:null}}function x(){return{type:r.d,payload:null}}},20:function(e,t,n){e.exports=n(49)},26:function(e,t,n){e.exports=n(32)},3:function(e,t,n){"use strict";n.d(t,"e",function(){return o}),n.d(t,"j",function(){return a}),n.d(t,"c",function(){return r}),n.d(t,"b",function(){return s}),n.d(t,"a",function(){return i}),n.d(t,"k",function(){return u}),n.d(t,"h",function(){return c}),n.d(t,"l",function(){return l}),n.d(t,"f",function(){return d}),n.d(t,"g",function(){return p}),n.d(t,"i",function(){return h}),n.d(t,"d",function(){return m});var o="@@ion-router/EDIT_ROUTE",a="@@ion-router/REMOVE_ROUTE",r="@@ion-router/BATCH_ROUTES",s="@@ion-router/BATCH_REMOVE_ROUTES",i="@@ion-router/ACTION",u="@@ion-router/ROUTE",c="@@ion-router/MATCH_ROUTES",l="@@ion-router/SET_PARAMS",d="@@ion-router/ENTER_ROUTES",p="@@ion-router/EXIT_ROUTES",h="@@ion-router/PENDING_UPDATES",m="@@ion-router/COMMITTED_UPDATES"},31:function(e,t,n){"use strict";n.r(t);var o=n(6),a=n(5),r=n(1),s=n(3),i=n(2),u={location:{pathname:"",search:"",hash:""},matchedRoutes:[],routes:{ids:[],routes:{}}};t.default=function(){var e,t,n,c,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:u,d=arguments.length>1?arguments[1]:void 0;if(!d||!d.type)return l;switch(d.type){case s.k:return d.payload.pathname===l.location.pathname&&d.payload.search===l.location.search&&d.payload.hash===l.location.hash?l:Object(r.a)({},l,{location:Object(r.a)({},d.payload)});case s.l:return Object(r.a)({},l,{routes:Object(r.a)({},l.routes,{routes:Object(r.a)({},l.routes.routes,Object(a.a)({},d.payload.route,Object(r.a)({},l.routes.routes[d.payload.route],{params:d.payload.params,state:d.payload.state})))})});case s.h:return Object(r.a)({},l,{matchedRoutes:d.payload});case s.c:return Object(r.a)({},l,{routes:{ids:[].concat(Object(o.a)(l.routes.ids),Object(o.a)(d.payload.ids)),routes:Object(r.a)({},l.routes.routes,d.payload.ids.reduce(function(e,t){var n=d.payload.routes[t];return Object(r.a)({},e,Object(a.a)({},n.name,Object(i.stateRouteShape)(n)))},{}))}});case s.e:return e=d.payload,Object(r.a)({},l,{routes:{ids:[].concat(Object(o.a)(l.routes.ids),[e.name]),routes:Object(r.a)({},l.routes.routes,Object(a.a)({},e.name,{name:e.name,path:e.path,parent:e.parent,params:e.params,state:e.state}))}});case s.j:return t=d.payload,n=Object(o.a)(l.routes.ids),c=Object(r.a)({},l.routes.routes),n.splice(n.indexOf(t),1),delete c[t],Object(r.a)({},l,{routes:{ids:n,routes:c}});case s.b:return c=(n=l.routes.ids.filter(function(e){return!d.payload.ids.includes(e)})).reduce(function(e,t){return Object(r.a)({},e,Object(a.a)({},t,l.routes.routes[t]))},{}),Object(r.a)({},l,{routes:{ids:n,routes:c}});default:return l}}},32:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return u});var o=n(27),a=n(0),r=n.n(a),s=n(4);var i={component:n(38).a,else:function(){return null},loadingComponent:function(){return null}};function u(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){return!0},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return Object(a.memo)(function(a){var u=a.component,c=void 0===u?i.component:u,l=a.else,d=void 0===l?i.else:l,p=a.loadingComponent,h=void 0===p?i.loadingComponent:p,m=a.children,g=Object(o.a)(a,["component","else","loadingComponent","children"]);["component","loadingComponent","else"].forEach(function(e){var t=n[e];(function(e){return!!e})(t)&&(g[e]=g[t],g[t]=void 0)});var f=Object(s.d)(function(e){return t(e,g)});return Object(s.d)(function(t){return!!f&&e(t,g)})?f?r.a.createElement(c,Object.assign({},g),m):r.a.createElement(h,Object.assign({},g)):f?r.a.createElement(d,Object.assign({},g)):r.a.createElement(h,Object.assign({},g))})}i.else.displayName="null",i.loadingComponent.displayName="null"},333:function(e,t,n){},334:function(e,t,n){"use strict";n.r(t);var o=n(5),a=n(1),r=n(0),s=n.n(r),i=n(19),u=n.n(i),c=n(9),l=n(4),d=n(7),p=n.n(d),h=n(2),m=n(33),g=n.n(m),f=function(){return{}};function y(e){var t=new g.a(e.path),n=t.reverse({}),o=!!n&&t.match(n),r=o||void 0;return Object(a.a)({stateFromParams:f,paramsFromState:f,parent:void 0,updateState:{},state:{},params:{},exitParams:r},e,{"@parser":t})}function b(e,t){return Object(a.a)({},t,Object(o.a)({},e.name,y(e)))}var v=n(13),T=n(17),R=n.n(T),E=n(3),w=n(6),k=n(8),x=n(31),O=function(e,t){return e.filter(function(e){return-1===t.indexOf(e)})};function j(e,t){return Object.keys(Object(a.a)({},t,e)).filter(function(n){return!Object.prototype.hasOwnProperty.call(e,n)||e[n]!==t[n]})}function S(e,t,n){var o=e.stateFromParams(t,n),r=function(e,t){var n=j(e.state,t),o=e.updateState;return n.map(function(e){return!!o[e]&&o[e](t[e],t)}).filter(function(e){return e})}(e,o),s=[],i={};if(r.length){s.push(h.setParamsAndState(e.name,t,o)),i[e.name]=Object(a.a)({},e,{params:t,state:o});for(var u=0;u<r.length;u++)r[u].type&&(r[u]=[r[u]]),r[u].forEach(function(e){return s.push(e)})}return{acts:s,updatedRoutes:i}}function A(e,t){return e.exitParams instanceof Function?Object(a.a)({},e.exitParams(t)):Object(a.a)({},e.exitParams)}var C=function(e,t,n){for(var o=t[n],r=o.params,s=o;s.parent;){var i=t[s.parent];k.a(e,i.name)||(r=Object(a.a)({},r,A(i,r))),s=i}return S(o,r=Object(a.a)({},r,A(o,r)),e)};var L=function(e,t,n){var o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=[],s=t.routing.matchedRoutes,i=Object(v.createPath)(n.payload),u=t.routing.routes.ids.filter(function(e,t){return function(n){return e[n]["@parser"].match(t)}}(e,i)),c=O(s,u),l=O(u,s);if((c.length||l.length)&&(r.push(h.matchRoutes(u)),c.length&&r.push(h.exitRoutes(c)),l.length&&r.push(h.enterRoutes(l))),o){var d=function(e,t,n){for(var o=Object.keys(e),r=[],s=e,i=0;i<o.length;i++){var u=e[o[i]],c=u["@parser"].match(n);if(c){var l=S(u,c,t),d=l.updatedRoutes,p=l.acts;s=Object(a.a)({},s,d),r=[].concat(Object(w.a)(r),Object(w.a)(p))}else if(t.routing.matchedRoutes.includes(o[i])){var h=C(t,s,o[i]),m=h.updatedRoutes,g=h.acts;r=[].concat(Object(w.a)(r),Object(w.a)(g)),s=Object(a.a)({},s,m)}}return{updatedRoutes:s,acts:r}}(e,t,i),p=d.updatedRoutes;return d.acts.forEach(function(e){return r.push(e)}),{newEnhancedRoutes:p,toDispatch:r}}return{newEnhancedRoutes:e,toDispatch:r}};function P(e,t,n){return L(e,function(e,t){return Object(a.a)({},e,{routing:Object(x.default)(e.routing,t)})}(t,n),h.route(t.routing.location)).toDispatch}var U,I=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Object(v.createBrowserHistory)(),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:D,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return function(r){return function(s,i){var u=Object(a.a)({},r(s,i),{routerOptions:Object(a.a)({isServer:!1,enhancedRoutes:{}},o)}),l=Object(c.c)(q(e,t,n)(u))(u.dispatch);return u.dispatch=l,u}}};function F(e,t,n){return t(n)}var N="#@#$@$#@$@#$@#$@#$@#$@#$@#$@#$@#$@#$@#$ignore";var D=(U={},Object(o.a)(U,N,F),Object(o.a)(U,E.a,function(e){return{newEnhancedRoutes:e,toDispatch:[]}}),Object(o.a)(U,E.e,function(e,t,n){var o=b(n.payload,e);return{newEnhancedRoutes:o,toDispatch:P(o,t,n)}}),Object(o.a)(U,E.c,function(e,t,n){var r=Object(a.a)({},e,n.payload.ids.reduce(function(e,t){return Object(a.a)({},e,Object(o.a)({},t,y(n.payload.routes[t])))},{}));return{newEnhancedRoutes:r,toDispatch:P(r,t,n)}}),Object(o.a)(U,E.j,function(e,t,n){var o=Object(a.a)({},e);return delete o[n.payload],{newEnhancedRoutes:o,toDispatch:[]}}),Object(o.a)(U,E.b,function(e,t,n){var o=Object(a.a)({},e);return n.payload.ids.forEach(function(e){return delete o[e]}),{newEnhancedRoutes:o,toDispatch:[]}}),Object(o.a)(U,E.k,L),Object(o.a)(U,"*",function(e,t){var n=[],r={},s=!1,i=Object(v.createPath)(t.routing.location);t.routing.matchedRoutes.forEach(function(o){var i=e[o],u=i.paramsFromState(t),c=i.stateFromParams(u);j(i.params,u).length&&(r[o]=Object(a.a)({},e[o],{params:u,state:c}),n.push(h.setParamsAndState(o,u,c)),s||(s=i["@parser"].reverse(u)))});var u=Object(a.a)({},t,{routing:Object(a.a)({},t.routing,{routes:Object(a.a)({},t.routing.routes,{routes:Object(a.a)({},t.routing.routes.routes,Object.keys(r).reduce(function(e,n){return Object(a.a)({},e,Object(o.a)({},n,Object(a.a)({},t.routing.routes.routes[n],{params:r[n].params,state:r[n].state})))},{}))})})}),c=L(e,u,h.route({pathname:s||i,search:"",state:!1,hash:""}),!1).toDispatch;return s&&s!==i&&n.push(h.push(s)),{newEnhancedRoutes:Object(a.a)({},e,r),toDispatch:[].concat(n,Object(w.a)(c))}}),U);function H(e,t,n){R()(t,'router middleware action handler for action type "'.concat(e,'" does not ').concat(n))}function _(e,t,n,o){var a=e(t,n,o);return H(o.type,void 0!==a,"return a map { newEnhancedRoutes, toDispatch }"),H(o.type,void 0!==a.newEnhancedRoutes&&null!==a.newEnhancedRoutes&&"object"===typeof a.newEnhancedRoutes&&!Array.isArray(a.newEnhancedRoutes),"return a map for newEnhancedRoutes"),H(o.type,Array.isArray(a.toDispatch),"return an array for toDispatch"),H(o.type,a.toDispatch.every(function(e){return e.type}),'return a toDispatch array with all actions containing a "type" key'),a}var q=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Object(v.createBrowserHistory)(),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:D,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=Object(v.createPath)(e.location),r=function e(t,o,a){var i,u=t.routerOptions,c=(i=a.type,Object.keys(s).includes(i)?s[a.type]:s["*"]),l=t.getState();r=s[N]||F;try{if(c!==s["*"]){var d=_(c,u.enhancedRoutes,l,a),p=o(a);return d.toDispatch.forEach(function(e){return t.dispatch(e)}),u.enhancedRoutes=d.newEnhancedRoutes,p}var h=o(a),m=_(c,u.enhancedRoutes,t.getState(),a);return u.enhancedRoutes=m.newEnhancedRoutes,n&&m.toDispatch.length&&(console.info("ion-router PROCESSING: ".concat(a.type)),console.info("dispatching: ",m.toDispatch)),m.toDispatch.forEach(function(e){return t.dispatch(e)}),h}finally{r=e}},s=Object(a.a)({},t);return function(t){return function(e){R()(e.routerOptions,"ion-router error: store has not been initialized.  Did you use the store enhancer?")}(t),e.listen(function(e){var n=Object(v.createPath)(e);n!==o&&(o=n,t.dispatch(h.route(e)))}),t.dispatch(h.route(e.location)),function(n){return function(o){var a=r(t,n,o);if(o.type===E.a){if(!o.payload.route&&"goBack"!==o.payload.verb&&"goForward"!==o.payload.verb)throw new Error("ion-router action ".concat(o.payload.verb," must be a string or a location object"));if(!h.isCallableVerb(o.payload.verb))return;switch(o.payload.verb){case"go":e.go(o.payload.distance);break;case"goBack":e.goBack();break;case"goForward":e.goForward();break;case"push":e.push(o.payload.route,o.payload.state);break;case"replace":e.replace(o.payload.route,o.payload.state)}}return a}}}},B=(n(16),n(38),n(47)),W=n(48),G=n(45),M=n(49),$=n(32);function V(e,t,n){var o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];t.routerOptions.isServer=o,n&&(t.dispatch(function(e,t){var n=h.batchRoutes(e);return t.enhancedRoutes=Object.keys(n.payload.routes).reduce(function(e,t){return b(n.payload.routes[t],e)},t.enhancedRoutes),n}(n,t.routerOptions)),t.dispatch(h.route(t.getState().routing.location)))}var X=n(40),Y=n.n(X),J="CHOOSE_EXAMPLE",z={example:!1};var K=n(11),Q=n.n(K),Z=n(26),ee=n.n(Z),te=n(20),ne=n.n(te),oe=n(10),ae=n.n(oe),re=ne()("hithere"),se=ee()(function(e){return"Greg"===e.there}),ie={there:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1?arguments[1]:void 0;return t&&t.type&&"UPDATE_THERE"===t.type?t.payload||"":e}};var ue=Object(l.b)(function(e){return e},function(e){return{change:function(t){return e({type:"UPDATE_THERE",payload:t})}}})(function(e){return s.a.createElement("div",null,s.a.createElement("p",null,"This simple example demonstrates using ",s.a.createElement("code",null,"Link"),",",s.a.createElement("code",null,"Routes"),", ",s.a.createElement("code",null,"Route"),", and two toggles,",s.a.createElement("code",null,"RouteToggle")," and ",s.a.createElement("code",null,"Toggle"),"."),s.a.createElement("ul",null,s.a.createElement("li",null,s.a.createElement(ae.a,{route:"home"},"Home")),s.a.createElement("li",null,s.a.createElement(ae.a,{route:"hithere",there:"Somebody"},"Hi to Somebody")),s.a.createElement("li",null,s.a.createElement(ae.a,{route:"hithere",there:"Greg"},"Hi to Greg")),s.a.createElement("li",null,"Change value of ",s.a.createElement("code",null,"there")," in store:",s.a.createElement("input",{value:e.there,onChange:function(t){return e.change(t.target.value)}}))),s.a.createElement(re,{component:function(){return s.a.createElement("div",null,"Hi ",e.there,"!",s.a.createElement(se,{component:function(){return s.a.createElement("div",null,"It's Greg!!")}}))},else:function(){return s.a.createElement("div",null,"Home")}}),s.a.createElement(p.a,null,s.a.createElement(Q.a,{path:"/",name:"home"}),s.a.createElement(Q.a,{path:"/hi(/:there)",name:"hithere",stateFromParams:function(e){return e},paramsFromState:function(e){return e},updateState:{there:function(e){return{type:"UPDATE_THERE",payload:e}}}})))}),ce=ee()(function(){return!0},function(e){return!e.async.loading}),le={async:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{loading:!1,thing:""},t=arguments.length>1?arguments[1]:void 0;if(!t||!t.type)return e;switch(t.type){case"START_LOAD":return Object(a.a)({},e,{loading:!0});case"SET_THING":return Object(a.a)({},e,{loading:!1,thing:t.payload});default:return e}}},de=Object(l.b)(function(e){return{thing:e.async.thing}})(function(e){var t=e.thing;return s.a.createElement("div",null,"This is the loaded thing: ",t)});function pe(){return s.a.createElement("div",{style:{color:"red"}},"LOADING...")}var he=Object(l.b)(void 0,function(e){return{load:function(){e({type:"START_LOAD",payload:!0}),setTimeout(function(){return e({type:"SET_THING",payload:'"I loaded the thing!"'})},1e3)}}})(function(e){return s.a.createElement("div",null,s.a.createElement("p",null,"This example demonstrates using a loading component"),s.a.createElement("button",{onClick:e.load},"Load stuff"),s.a.createElement(ce,{component:de,loadingComponent:pe}),s.a.createElement(p.a,null,s.a.createElement(Q.a,{path:"/",name:"home"})))}),me={subroutes:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1?arguments[1]:void 0;return t&&t.type&&"SUBROUTE"===t.type?t.payload:e}},ge=ne()("things"),fe=ne()("subthing-things"),ye=function(e){var t=e.load;return s.a.createElement("div",null,s.a.createElement(ge,{component:function(){return s.a.createElement("button",{onClick:t},"Load sub-routes")},else:function(){return s.a.createElement(ae.a,{route:"things"},"Click here first")}}))};function be(e){var t=e.parentRoute,n=e.unload;return s.a.createElement("div",null,s.a.createElement("p",null,"This is the loaded child"),s.a.createElement("button",{onClick:n},"Unload child route"),s.a.createElement(ae.a,{route:"subthing-".concat(t)},"Show new dynamic route"),s.a.createElement(fe,{component:function(){return s.a.createElement("div",null,"This is the subroute dynamic route")}}),s.a.createElement(p.a,null,s.a.createElement(Q.a,{path:"subthing",parent:t,name:"subthing-".concat(t)})))}var ve=Object(l.b)(function(e){return{subthings:e.subroutes?be:ye,routes:e.routing.routes.ids.map(function(t){return"".concat(t," (").concat(e.routing.routes.routes[t].path,")")})}},function(e){return{load:function(){return e({type:"SUBROUTE",payload:!0})},unload:function(){return e({type:"SUBROUTE",payload:!1})}}})(function(e){var t=e.load,n=e.subthings,o=e.routes,a=e.unload,r=n;return s.a.createElement("div",null,s.a.createElement("p",null,"This example demonstrates asynchronous loading of a sub-module with dynamic routes"),s.a.createElement("p",null,"Declared routes:"),s.a.createElement("ul",null,o.map(function(e){return s.a.createElement("li",{key:e},e)})),s.a.createElement(r,{parentRoute:"things",unload:a,load:t}),s.a.createElement(p.a,null,s.a.createElement(Q.a,{path:"/",name:"home"}),s.a.createElement(Q.a,{path:"/things",name:"things"})))}),Te=n(83),Re=n(84),Ee=n(90),we=n(85),ke=n(91),xe={first:"",second:0,third:[]},Oe={statechange:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:xe,t=arguments.length>1?arguments[1]:void 0;if(!t||!t.type)return e;switch(t.type){case"ONE":return Object(a.a)({},e,{first:t.payload});case"TWO":return Object(a.a)({},e,{second:t.payload});case"THREE":return Object(a.a)({},e,{third:t.payload});default:return e}}},je=function(e){function t(e){var n;return Object(Te.a)(this,t),(n=Object(Ee.a)(this,Object(we.a)(t).call(this,e))).state={newItem:""},n}return Object(ke.a)(t,e),Object(Re.a)(t,[{key:"render",value:function(){var e=this;return s.a.createElement("div",null,s.a.createElement("p",null,"This demonstration has no links, but updates URL"),s.a.createElement("ul",null,s.a.createElement("li",null,"First state:",s.a.createElement("input",{type:"text",onChange:function(t){return e.props.setFirst(t.target.value)},value:this.props.first})),s.a.createElement("li",null,"Second state:",s.a.createElement("input",{type:"number",onChange:function(t){return e.props.setSecond(t.target.value)},value:this.props.second})),s.a.createElement("li",null,"Third state:",s.a.createElement("ul",null,this.props.third.map(function(t,n){return s.a.createElement("li",{key:n},t,s.a.createElement("button",{onClick:function(){return e.props.setThird(function(e,t){var n=Object(w.a)(e);return n.splice(t,1),n}(e.props.third,n))},title:"remove"},"X"))})),s.a.createElement("input",{id:"newThird",type:"text",value:this.state.newItem,onChange:function(t){return e.setState({newItem:t.target.value})}}),s.a.createElement("button",{disabled:!this.state.newItem.length,onClick:function(){return e.props.setThird([].concat(Object(w.a)(e.props.third),[e.state.newItem]))}},"Add new third item"))),s.a.createElement(p.a,null,s.a.createElement(Q.a,{name:"home",path:"/(first/:first/)(second/:second/)(third/*third)",stateFromParams:function(e){return{first:e.first||"",second:e.second||0,third:e.third?e.third.split("/"):[]}},paramsFromState:function(e){return{first:e.statechange.first,second:e.statechange.second?e.statechange.second:void 0,third:e.statechange.third.join("/")}},updateState:{first:function(e){return{type:"ONE",payload:e}},second:function(e){return{type:"TWO",payload:e}},third:function(e){return{type:"THREE",payload:e}}}})))}}]),t}(r.Component),Se=Object(l.b)(function(e){return{first:e.statechange.first,second:e.statechange.second,third:e.statechange.third}},function(e){return{setFirst:function(t){return e({type:"ONE",payload:t})},setSecond:function(t){return e({type:"TWO",payload:+t})},setThird:function(t){return e({type:"THREE",payload:t})}}})(je),Ae=Object(M.RouteToggle)("hithere"),Ce=Object($.default)(function(e){return"Greg"===e.there});var Le={basic:{source:"import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Routes from 'ion-router/Routes'\nimport Route from 'ion-router/Route'\nimport Toggle from 'ion-router/Toggle'\nimport RouteToggle from 'ion-router/RouteToggle'\nimport Link from 'ion-router/Link'\n\nconst HiThereToggle = RouteToggle('hithere')\nconst ThereToggle = Toggle(state => state.there === 'Greg')\n\nexport const reducer = {\n  there: (state = '', action) => {\n    if (!action || !action.type) return state\n    if (action.type === 'UPDATE_THERE') return action.payload || ''\n    return state\n  }\n}\n\nfunction Basic(props) {\n  return (\n    <div>\n      <p>\n        This simple example demonstrates using <code>Link</code>,\n        <code>Routes</code>, <code>Route</code>, and two toggles,\n        <code>RouteToggle</code> and <code>Toggle</code>.\n      </p>\n      <ul>\n        <li><Link route=\"home\">Home</Link></li>\n        <li>\n          <Link route=\"hithere\" there=\"Somebody\">Hi to Somebody</Link>\n        </li>\n        <li><Link route=\"hithere\" there=\"Greg\">Hi to Greg</Link></li>\n        <li>\n          Change value of <code>there</code> in store:\n          <input value={props.there} onChange={e => props.change(e.target.value)} />\n        </li>\n      </ul>\n      <HiThereToggle\n        component={() => (\n          <div>\n            Hi {props.there}!\n            <ThereToggle\n              component={() => (\n                <div>It&apos;s Greg!!</div>\n              )}\n            />\n          </div>\n        )}\n        else={() => (\n          <div>\n            Home\n          </div>\n        )}\n      />\n      <Routes>\n        <Route path=\"/\" name=\"home\" />\n        <Route\n          path=\"/hi(/:there)\"\n          name=\"hithere\"\n          stateFromParams={params => params}\n          paramsFromState={state => state}\n          updateState={{\n            there: t => ({ type: 'UPDATE_THERE', payload: t })\n          }}\n        />\n      </Routes>\n    </div>\n  )\n}\n\nBasic.propTypes = {\n  there: PropTypes.string\n}\n\nexport default connect(state => state, dispatch => ({\n  change: there => dispatch({ type: 'UPDATE_THERE', payload: there })\n}))(Basic)\n",component:ue,reducer:ie,name:"Basic Example",lang:"jsx"},loading:{source:"import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Routes from 'ion-router/Routes'\nimport Route from 'ion-router/Route'\nimport Toggle from 'ion-router/Toggle'\n\nconst AsyncToggle = Toggle(() => true, state => {\n  return !state.async.loading\n})\n\nexport const reducer = {\n  async: (state = { loading: false, thing: '' }, action) => {\n    if (!action || !action.type) return state\n    switch (action.type) {\n      case 'START_LOAD':\n        return {\n          ...state,\n          loading: true\n        }\n      case 'SET_THING':\n        return {\n          ...state,\n          loading: false,\n          thing: action.payload\n        }\n      default:\n        return state\n    }\n  }\n}\n\nconst Thing = connect(state => ({ thing: state.async.thing }))(({ thing }) => (\n  <div>This is the loaded thing: {thing}</div>\n))\n\nfunction Loading() {\n  return (\n    <div style={{ color: 'red' }}>LOADING...</div>\n  )\n}\n\nfunction LoadingDemo(props) {\n  return (\n    <div>\n      <p>This example demonstrates using a loading component</p>\n      <button onClick={props.load}>Load stuff</button>\n      <AsyncToggle component={Thing} loadingComponent={Loading} />\n      <Routes>\n        <Route path=\"/\" name=\"home\" />\n      </Routes>\n    </div>\n  )\n}\n\nLoadingDemo.propTypes = {\n  load: PropTypes.func.isRequired\n}\n\nexport default connect(undefined, dispatch => ({\n  load: () => {\n    // fake loading from an asychronous source using setTimeout\n    dispatch({ type: 'START_LOAD', payload: true })\n    setTimeout(() => dispatch({ type: 'SET_THING', payload: '\"I loaded the thing!\"' }), 1000)\n  }\n}))(LoadingDemo)\n",component:he,reducer:le,name:"Loading Component",lang:"jsx"},subroutes:{source:"import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Routes from 'ion-router/Routes'\nimport Route from 'ion-router/Route'\nimport RouteToggle from 'ion-router/RouteToggle'\nimport Link from 'ion-router/Link'\n\nexport const reducer = {\n  subroutes: (state = false, action) => {\n    if (!action || !action.type) return state\n    if (action.type === 'SUBROUTE') {\n      return action.payload\n    }\n    return state\n  }\n}\n\nconst ThingToggle = RouteToggle('things')\nconst SubthingToggle = RouteToggle('subthing-things')\n\nconst Null = ({ load }) => <div>\n  <ThingToggle\n    component={() => (\n      <button onClick={load}>Load sub-routes</button>\n    )}\n    else={() => (\n      <Link route=\"things\">Click here first</Link>\n    )}\n  />\n</div>\n\nNull.propTypes = {\n  load: PropTypes.func.isRequired\n}\n\nfunction Subthings({ parentRoute, unload }) {\n  return (\n    <div>\n      <p>This is the loaded child</p>\n      <button onClick={unload}>Unload child route</button>\n      <Link route={`subthing-${parentRoute}`}>Show new dynamic route</Link>\n      <SubthingToggle\n        component={() => (\n          <div>\n            This is the subroute dynamic route\n          </div>\n        )}\n      />\n      <Routes>\n        <Route path=\"subthing\" parent={parentRoute} name={`subthing-${parentRoute}`} />\n      </Routes>\n    </div>\n  )\n}\n\nSubthings.propTypes = {\n  parentRoute: PropTypes.string.isRequired,\n  unload: PropTypes.func.isRequired\n}\n\n\nfunction SubRoutes({ load, subthings, routes, unload }) {\n  const Sub = subthings\n  return (\n    <div>\n      <p>This example demonstrates asynchronous loading of a sub-module with dynamic routes</p>\n      <p>Declared routes:</p>\n      <ul>\n        {routes.map(route => <li key={route}>{route}</li>)}\n      </ul>\n\n      <Sub parentRoute=\"things\" unload={unload} load={load} />\n      <Routes>\n        <Route path=\"/\" name=\"home\" />\n        <Route path=\"/things\" name=\"things\" />\n      </Routes>\n    </div>\n  )\n}\n\nSubRoutes.propTypes = {\n  load: PropTypes.func.isRequired,\n  unload: PropTypes.func.isRequired,\n  subthings: PropTypes.any.isRequired,\n  routes: PropTypes.array.isRequired,\n}\n\nexport default connect(state => ({\n  subthings: state.subroutes ? Subthings : Null,\n  routes: state.routing.routes.ids.map(id => `${id} (${state.routing.routes.routes[id].path})`)\n}), dispatch => ({\n  load: () => dispatch({ type: 'SUBROUTE', payload: true }),\n  unload: () => dispatch({ type: 'SUBROUTE', payload: false }),\n}))(SubRoutes)\n",component:ve,reducer:me,name:"Dynamic Sub-routes",lang:"jsx"},statechanges:{source:"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Routes from 'ion-router/Routes'\nimport Route from 'ion-router/Route'\n\nconst defaultState = {\n  first: '',\n  second: 0,\n  third: []\n}\n\nexport const reducer = {\n  statechange: (state = defaultState, action) => {\n    if (!action || !action.type) return state\n    switch (action.type) {\n      case 'ONE':\n        return {\n          ...state,\n          first: action.payload\n        }\n      case 'TWO':\n        return {\n          ...state,\n          second: action.payload\n        }\n      case 'THREE':\n        return {\n          ...state,\n          third: action.payload\n        }\n      default:\n        return state\n    }\n  }\n}\n\nconst removeItem = (arr, idx) => {\n  const ret = [...arr]\n  ret.splice(idx, 1)\n  return ret\n}\n\nclass StateChanges extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newItem: ''\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <p>This demonstration has no links, but updates URL</p>\n        <ul>\n          <li>\n            First state:\n            <input\n              type=\"text\"\n              onChange={e => this.props.setFirst(e.target.value)}\n              value={this.props.first}\n            />\n          </li>\n          <li>\n            Second state:\n            <input\n              type=\"number\"\n              onChange={e => this.props.setSecond(e.target.value)}\n              value={this.props.second}\n            />\n          </li>\n          <li>\n            Third state:\n            <ul>\n              {this.props.third.map((item, i) => (\n                <li key={i}>\n                  {item}\n                  <button\n                    onClick={() =>\n                      this.props.setThird(\n                        removeItem(this.props.third, i)\n                      )}\n                    title=\"remove\"\n                  >X</button>\n                </li>\n              ))}\n            </ul>\n            <input\n              id=\"newThird\"\n              type=\"text\"\n              value={this.state.newItem}\n              onChange={e => this.setState({ newItem: e.target.value })}\n            />\n            <button\n              disabled={!this.state.newItem.length}\n              onClick={() => this.props.setThird([...this.props.third, this.state.newItem])}>\n              Add new third item\n            </button>\n          </li>\n        </ul>\n        <Routes>\n          <Route\n            name=\"home\"\n            path=\"/(first/:first/)(second/:second/)(third/*third)\"\n            stateFromParams={params => ({\n              first: params.first || '',\n              second: params.second || 0,\n              third: params.third ? params.third.split('/') : []\n            })}\n            paramsFromState={state => ({\n              first: state.statechange.first,\n              second: state.statechange.second ? state.statechange.second : undefined,\n              third: state.statechange.third.join('/')\n            })}\n            updateState={{\n              first: first => ({ type: 'ONE', payload: first }),\n              second: second => ({ type: 'TWO', payload: second }),\n              third: third => ({ type: 'THREE', payload: third }),\n            }}\n          />\n        </Routes>\n      </div>\n    )\n  }\n}\n\nStateChanges.propTypes = {\n  first: PropTypes.string.isRequired,\n  second: PropTypes.number.isRequired,\n  third: PropTypes.array.isRequired,\n  setFirst: PropTypes.func.isRequired,\n  setSecond: PropTypes.func.isRequired,\n  setThird: PropTypes.func.isRequired,\n}\n\nexport default connect(state => ({\n  first: state.statechange.first,\n  second: state.statechange.second,\n  third: state.statechange.third\n}), dispatch => ({\n  setFirst: first => dispatch({ type: 'ONE', payload: first }),\n  setSecond: second => dispatch({ type: 'TWO', payload: +second }),\n  setThird: third => dispatch({ type: 'THREE', payload: third }),\n}))(StateChanges)\n",component:Se,reducer:Oe,name:"Redux State Changes URL",lang:"jsx"},typescript:{source:"import React from 'react'\nimport { Dispatch } from 'redux'\nimport { useDispatch } from 'react-redux'\nimport {\n  Routes,\n  Route,\n  Toggle,\n  RouteToggle,\n  Link,\n  FullStateWithRouter,\n} from 'ion-router'\n\ninterface StoreState {\n  there: string\n}\n\ninterface ChangeAction {\n  type: 'UPDATE_THERE'\n  payload: string\n}\n\nconst HiThereToggle = RouteToggle('hithere')\nconst ThereToggle = Toggle(\n  (state: StoreState & FullStateWithRouter) => state.there === 'Greg'\n)\n\nexport const reducer = {\n  there: (state = '', action: ChangeAction) => {\n    if (!action || !action.type) return state\n    if (action.type === 'UPDATE_THERE') return action.payload || ''\n    return state\n  },\n}\n\nexport default function Typescript(props: StoreState) {\n  const dispatch = useDispatch<Dispatch<ChangeAction>>()\n  const change = (newThere: string) =>\n    dispatch({\n      type: 'UPDATE_THERE',\n      payload: newThere,\n    })\n  return (\n    <div>\n      <p>\n        This simple example demonstrates using <code>Link</code>,\n        <code>Routes</code>, <code>Route</code>, and two toggles,\n        <code>RouteToggle</code> and <code>Toggle</code>.\n      </p>\n      <ul>\n        <li>\n          <Link route=\"home\">Home</Link>\n        </li>\n        <li>\n          <Link route=\"hithere\" there=\"Somebody\">\n            Hi to Somebody\n          </Link>\n        </li>\n        <li>\n          <Link route=\"hithere\" there=\"Greg\">\n            Hi to Greg\n          </Link>\n        </li>\n        <li>\n          Change value of <code>there</code> in store:\n          <input value={props.there} onChange={e => change(e.target.value)} />\n        </li>\n      </ul>\n      <HiThereToggle\n        component={() => (\n          <div>\n            Hi {props.there}!\n            <ThereToggle component={() => <div>It&apos;s Greg!!</div>} />\n          </div>\n        )}\n        else={() => <div>Home</div>}\n      />\n      <Routes>\n        <Route path=\"/\" name=\"home\" />\n        <Route\n          path=\"/hi(/:there)\"\n          name=\"hithere\"\n          stateFromParams={(params: { there: string }) => params}\n          paramsFromState={state => ({ there: state.there })}\n          updateState={{\n            there: (t): ChangeAction => ({ type: 'UPDATE_THERE', payload: t }),\n          }}\n        />\n      </Routes>\n    </div>\n  )\n}\n",component:function(e){var t=Object(l.c)();return s.a.createElement("div",null,s.a.createElement("p",null,"This simple example demonstrates using ",s.a.createElement("code",null,"Link"),",",s.a.createElement("code",null,"Routes"),", ",s.a.createElement("code",null,"Route"),", and two toggles,",s.a.createElement("code",null,"RouteToggle")," and ",s.a.createElement("code",null,"Toggle"),"."),s.a.createElement("ul",null,s.a.createElement("li",null,s.a.createElement(B.Link,{route:"home"},"Home")),s.a.createElement("li",null,s.a.createElement(B.Link,{route:"hithere",there:"Somebody"},"Hi to Somebody")),s.a.createElement("li",null,s.a.createElement(B.Link,{route:"hithere",there:"Greg"},"Hi to Greg")),s.a.createElement("li",null,"Change value of ",s.a.createElement("code",null,"there")," in store:",s.a.createElement("input",{value:e.there,onChange:function(e){return n=e.target.value,t({type:"UPDATE_THERE",payload:n});var n}}))),s.a.createElement(Ae,{component:function(){return s.a.createElement("div",null,"Hi ",e.there,"!",s.a.createElement(Ce,{component:function(){return s.a.createElement("div",null,"It's Greg!!")}}))},else:function(){return s.a.createElement("div",null,"Home")}}),s.a.createElement(G.Routes,null,s.a.createElement(W.Route,{path:"/",name:"home"}),s.a.createElement(W.Route,{path:"/hi(/:there)",name:"hithere",stateFromParams:function(e){return e},paramsFromState:function(e){return{there:e.there}},updateState:{there:function(e){return{type:"UPDATE_THERE",payload:e}}}})))},reducer:{there:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1?arguments[1]:void 0;return t&&t.type&&"UPDATE_THERE"===t.type?t.payload||"":e}},name:"Typescript example",lang:"tsx"}},Pe=n(18),Ue=n(86),Ie=n(87),Fe=n.n(Ie),Ne=(n(70),ee()(function(e){return e.examples.example},void 0,{},!1,"mainStore")),De=n(41),He=n(42),_e=(n(134),Object(l.b)(function(e){return{url:Object(De.b)(e.routing.location)}},function(e){return{back:function(){return e(He.goBack())},forward:function(){return e(He.goForward())},reset:function(){return e(He.push("/"))}}})(function(e){var t=e.url,n=void 0===t?"/":t,o=e.back,a=e.forward,r=e.reset,i=e.showSource,u=e.Content,c=void 0===u?function(){return s.a.createElement("div",null,"hi")}:u,l=e.store;return s.a.createElement("div",{className:"browser"},s.a.createElement("header",null,s.a.createElement("button",{onClick:o,className:"back"},s.a.createElement("span",{className:"fa fa-chevron-left"})),s.a.createElement("button",{onClick:a,className:"forward"},s.a.createElement("span",{className:"fa fa-chevron-right"})),s.a.createElement("button",{onClick:r,className:"refresh"},s.a.createElement("span",{className:"fa fa-refresh"})),s.a.createElement("input",{type:"text",value:n,readOnly:!0}),s.a.createElement("button",{onClick:i,className:"mobile-showsource"},"View Source")),s.a.createElement("article",null,s.a.createElement(c,{store:l})))})),qe=n(339),Be=n(338);var We=function(e){var t=e.source,n=e.lang,o=void 0===n?"jsx":n;return s.a.createElement(qe.a,{language:o,style:Be.a},t)};function Ge(e){var t=e.element,n=s.a.useRef(null),o=s.a.useCallback(function(e){e&&(Object(i.render)(t,e),n.current=e)});return s.a.createElement("div",{ref:o})}var Me=function(e){var t=e.example,n=function(){var e=Object(De.a)({initialEntries:["/"]}),n=Object(c.b)(Object(a.a)({},Le[t].reducer,{routing:Y.a})),o=I(e),r=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({name:"examples: ".concat(t)}):c.c,s=Object(c.d)(n,void 0,r(o));return V(l.b,s),s},o=Object(r.useRef)(n());o.current=n();var i=Object(r.useState)(!0),u=Object(Pe.a)(i,2),d=u[0],h=u[1];return s.a.createElement(Ge,{element:s.a.createElement("div",{className:"example"},s.a.createElement("div",{className:"browser-panel"},s.a.createElement(l.a,{store:o.current},s.a.createElement(p.a,{store:o.current},d?s.a.createElement(_e,{store:o.current,Content:Le[t].component,showSource:function(){return h(!1)}}):s.a.createElement("div",null)))),s.a.createElement("div",{className:"source-panel"},s.a.createElement("button",{className:"mobile-showsource",onClick:function(){return h(!0)}},"Show Example"),s.a.createElement(We,{source:Le[t].source})))})},$e=Object(l.b)(function(e){return{example:e.examples.example}})(Me);function Ve(){return s.a.createElement("div",null,s.a.createElement(Ne,{component:$e,else:function(){return s.a.createElement("div",null,s.a.createElement("h1",null,"Examples of ion-router's power"),s.a.createElement("p",null,"There are many ways ion-router can be used, and this list will grow as new ones are added."),s.a.createElement("ul",null,s.a.createElement("li",null,s.a.createElement(ae.a,{route:"examples",example:"basic"},"Basic Example")),s.a.createElement("li",null,s.a.createElement(ae.a,{route:"examples",example:"loading"},"Asynchronous loading")),s.a.createElement("li",null,s.a.createElement(ae.a,{route:"examples",example:"subroutes"},"Dynamic sub-routes")),s.a.createElement("li",null,s.a.createElement(ae.a,{route:"examples",example:"statechanges"},"Updating url from only redux state changes"))))}}))}function Xe(e){var t={__html:e.text};return s.a.createElement("div",{className:"markdown-viewer"},s.a.createElement("div",{dangerouslySetInnerHTML:t}))}var Ye=ne()("examples",null,void 0,{},!1,"mainStore");var Je=Fe()("<img src='ion-router.png' alt='Ion Router Logo' width='300px'>\n\n# ion-router\n###### Connecting your url and redux state\n\n[![Code Climate](https://codeclimate.com/github/cellog/ion-router/badges/gpa.svg)](https://codeclimate.com/github/cellog/ion-router) [![Test Coverage](https://codeclimate.com/github/cellog/ion-router/badges/coverage.svg)](https://codeclimate.com/github/cellog/ion-router/coverage) [![Build Status](https://travis-ci.org/cellog/ion-router.svg?branch=master)](https://travis-ci.org/cellog/ion-router) [![npm](https://img.shields.io/npm/v/ion-router.svg)](https://www.npmjs.com/package/ion-router)\n\nElegant powerful routing based on the simplicity of storing url as state\n\nTo install:\n\n```bash\n$ npm i -S ion-router\n```\nTable of Contents\n=================\n\n  * [Simple example](#simple-example)\n    * [Internal Linking with &lt;Link&gt;](#internal-linking-with-link)\n    * [Extending the example: asynchronous state loading](#extending-the-example-asynchronous-state-loading)\n    * [Available selectors for Toggle](#available-selectors-for-toggle)\n    * [What about complex routes like react\\-router nested &lt;Route&gt;?](#what-about-complex-routes-like-react-router-nested-route)\n    * [Dynamic Routes](#dynamic-routes)\n    * [enter/exit hooks](#enterexit-hooks)\n    * [Code splitting and asynchronous loading of Routes](#code-splitting-and-asynchronous-loading-of-routes)\n    * [Server-side Rendering](#server-side-rendering)\n    * [Explicitly changing URL](#explicitly-changing-url)\n  * [Animating page changes](#animating-page-changes)\n  * [Why a new router?](#why-a-new-router)\n  * [Principles](#principles)\n    * [URL state is just another asynchronous input to redux state](#url-state-is-just-another-asynchronous-input-to-redux-state)\n    * [When the URL changes, it should cause a state change in the redux store](#when-the-url-changes-it-should-cause-a-state-change-in-the-redux-store)\n    * [When the state changes in the redux store, it should be reflected in the URL](#when-the-state-changes-in-the-redux-store-it-should-be-reflected-in-the-url)\n    * [Route definition is separate from the components](#route-definition-is-separate-from-the-components)\n    * [IndexRoute, Redirect and ErrorRoute are not necessary](#indexroute-redirect-and-errorroute-are-not-necessary)\n    * [Easy testing](#easy-testing)\n    * [License](#license)\n    * [Thanks](#thanks)\n\n## Simple example\n\nLet's expand upon the [todo list example from the redux documentation](http://redux.js.org/docs/basics/ExampleTodoList.html)\n\nIn the sample application, we can create new todos, mark them as finished, and filter\nthe list to display all of them, just active todos, and just completed todos.  We can\nadd URL routing quite simply by focusing on the filtering state.\n\nWe'll respond to these 3 URLs:\n\n```\n/filter/SHOW_ALL\n/filter/SHOW_ACTIVE\n/filter/SHOW_COMPLETED\n```\n\nTo do this, we'll need to add four items to the app:\n\n 1. The router reducer, for storing routing state.\n 2. A route definition, mapping url to state, and state to url\n 3. The route definition within the app itself\n 4. include redux-saga and react-redux, and pass in the sagaMiddleware and connect\n\nreducers/index.js:\n```javascript\nimport { combineReducers } from 'redux'\nimport routing from 'ion-router/reducer' // the new line\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nconst todoApp = combineReducers({\n  todos,\n  visibilityFilter,\n  routing // add the routing reducer\n})\n\nexport default todoApp\n```\n\nRoutes.js:\n```javascript\nimport React from 'react'\nimport Routes from 'ion-router/Routes'\nimport Route from 'ion-router/Route'\nimport * as actions from './actions'\n\nconst paramsFromState = state => ({ visibilityFilter: state.visibilityFilter })\nconst stateFromParams = params => ({\n  visibilityFilter: params.visibilityFilter || 'SHOW_ACTIVE'\n})\nconst updateState = {\n  visibilityFilter: filter => actions.setVisibilityFilter(filter)\n}\n\nexport default () => (\n  <Routes>\n   <Route name=\"filters\" path=\"/filter/:visibilityFilter\"\n    paramsFromState={paramsFromState}\n    stateFromParams={stateFromParams}\n    updateState={updateState}\n   />\n  </Routes>\n)\n```\n\nindex.js:\n```javascript\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider, connect } from 'react-redux' // new - import connect\nimport makeRouter, { makeRouterStoreEnhancer } from 'ion-router' // our router - new line\n\nimport todoApp from './reducers'\nimport App from './components/App'\n\n// set up the router and create the store\nconst routerEnhancer = makeRouterStoreEnhancer()\nconst store = createStore(todoApp, undefined, routerEnhancer) // router store enhancer\nmakeRouter(connect, store) // set up the router\n\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n```\n\nthen add these lines inside App.js:\n\n```javascript\nimport Routes from './Routes' // new line\n// ...\n\nconst App = () => (\n  <div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n    <Routes />\x3c!-- new line --\x3e\n  </div>\n)\n```\n\n### Internal linking with `<Link>`\n\nNote that if we want to set up a menu of urls, ion-router provides a\n`<Link>` component that should be used for all internal links.  It uses the `to`\nprop in place of href.  An onClick handler may be passed to handle the click in\na custom fashion.  All other props will be passed through to the internal `<a>`\ntag.\n\nIf you wish to replace the current url instead of pushing, use the `replace` prop\ninstead of the `to` prop.\n\nUnlike any other router, the `<Link>` component can also create abstract routes\nfrom a list of route parameters. With this route declaration:\n\n```javascript\nconst routes = () => (\n  <Routes>\n    <Route name=\"biff\" path=\"/this/:fancy(/:thing)\" />\n  </Routes>\n)\n```\n\nwe can create a link like so:\n\n```javascript\nconst App = () => (\n  <div>\n    <Link route=\"biff\" fancy=\"hi\" thing={some.dynamicValue} />\n  </div>\n)\n```\n\nand if the dynamic value refers to `123` the route will link to `/this/hi/123`\n\n### Extending the example: asynchronous state loading\n\nWhat if we are loading the todo list from a database?  There will be a short delay while\nthe list is loaded, and the user will just see an empty list of todos.  If they add a todo,\nthe todo id could suddenly conflict with todos the user creates, which would erase them on the\ndatabase load.  Better is to display a different component while loading.\n\nTo implement this with our router, you will use:\n\n 1. a loading component that will be displayed when the todos are loading\n 2. a \"Toggle\" higher order component that is used to switch on/off display of a\n    component or its loading component\n 3. an asynchronous program to load the todos from the database.\n 4. an additional way of marking whether state is loaded or not in the store, and\n    actions and reducer code to capture this state.\n\nredux-saga is an excellent solution for expressing complex asynchronous actions in a\nsimple way.  You can write your asynchronous loader in any manner you choose, whether\nit is a thunk, saga, observable, or fill-in-your-favorite.\n\nFor this example, we will assume that you can add a simple \"loaded\" field to the todos\nreducer, and actions to set it to true or false.\n\nLet's design the loading component first:\n\nLoading.js:\n```javascript\nimport React from 'react'\n\nexport default () => (\n  <div>\n    <h1>Loading...</h1>\n  </div>\n)\n```\n\nAsynchronous loading of the todo items from the database can be accomplished with a very\nsimple saga.  The saga assumes that the todos can be accessed via a REST service that\nreturns JSON, and uses the axios library to make an xhr call to retrieve it from the\nserver at the `\"/getTodos\"` address.\n\nloadTodosSaga.js:\n```javascript\nimport { call, put } from 'redux-saga/effects'\nimport axios from 'axios'\n\nimport * as actions from './actions'\n\nexport default function *loadTodos() {\n  // mark loading as starting\n  yield put(actions.setLoaded(false))\n  const todos = yield call([axios, axios.get], '/getTodos')\n  // a new action for setting all of the todos at once\n  yield put(actions.setTodos(todos))\n  // mark loading as finished\n  yield put(actions.setLoaded(true))\n}\n```\n\nNow let's create a Toggle.  A Toggle is a higher order component that responds to state in order\nto turn on or off the display of a component, like a toggle switch.  It takes 2 callbacks as parameters.\nEach callback receives the state as a parameter and should return truthy or falsey values.  The first is\nused to determine whether the main component should be displayed.  The second optional callback is used\nto determine whether state is still loading, and if so, whether to display the loading component.\nBy default, if no loading callback is passed in, a Toggle assumes that the state is\nloaded.\n\nIn our example, there is only 1 route, and so we will display it if our state is marked\nas loaded.  If not, we will not display the component.  Instead, we will display the\nloading component.  Here is the source:\n\nTodosToggle.js:\n```javascript\nimport Toggle from 'ion-router/Toggle'\n\nexport default Toggle(state => state.loaded, state => !state.loaded)\n```\n\nThe TodosToggle is a component that accepts 2 props: `component` and `loadingComponent`.\n`component` should be a React component or connected container to display if the\nToggle condition is satisfied, and `loadingComponent` should be a React component or connected\ncontainer to display if the loading condition is satisfied.\n\nNote that if both callbacks return true, then the loading component will be displayed.\n\nFinally, the usage of TodosToggle is straightforward.\n\nin App.js:\n```javascript\nimport React from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddTodo'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nimport Routes from './Routes'\nimport Loading from './Loading'\nimport TodosToggle from './TodosToggle'\n\nconst App = () => (\n  <div>\n    <Routes />\n    <AddTodo />\n    <TodosToggle component={VisibleTodoList} loadingComponent={Loading} />\x3c!-- simple! --\x3e\n    <Footer />\n  </div>\n)\n\nexport default App\n```\n\nNow our component will display the todo list only when it has loaded.\n\n### Common use case: displaying a component when a route is selected\n\nIn most applications, there are menus that select components based on the user\nselecting a sub-application.  To display components whose sole display criteria is\nthe selection of a route, use a `RouteToggle`\n\n```javascript\nimport RouteToggle from 'ion-router'\n\nconst TodosRoute = RouteToggle('todos')\n```\n\nIn this way, you can display several components scattered around a layout template\nthat are route-specific without having to make a new layout template just for that route,\nor doing any strange contortions.\n\nA `RouteToggle` accepts all the arguments of Toggle after the route name to match:\n\n```javascript\nimport RouteToggle from 'ion-router'\n\nconst TodosRoute = RouteToggle('todos', state => state.whatever === 'hi')\n```\n\nThe example above will only toggle if the todos route is active and the `whatever`\nportion of state is equal to 'hi'\n\nA `RouteToggle` can be thought of\nas a simpler version of this source code:\n\n```javascript\nimport Toggle from 'ion-router/Toggle'\nimport { matchedRoutes } from 'ion-router/selectors'\n\nconst TodosRoute = Toggle(state => matchedRoutes(state, 'todos'))\n```\n\n### Available selectors for Toggles\n\nThe following selectors are available for use with Toggles. import as follows:\n\n```javascript\nimport * as selectors from 'ion-router/selectors'\n```\n\n#### matchedRoute(state, name)\n\n```javascript\nimport * as selectors from 'ion-router/selectors'\nimport Toggle from 'ion-router/Toggle'\n\nexport Toggle(state => selectors.matchedRoute(state, 'routename'))\n```\n\n`matchedRoute` accepts a single route name, or an array of route names to match.\nBy default, it matches on any route.  To enable strict matching (all routes must match)\npass in true to the third parameter of matchedRoute\n\n```javascript\nimport * as selectors from 'ion-router/selectors'\nimport Toggle from 'ion-router/Toggle'\n\nexport Toggle(state => selectors.matchedRoute(state, ['route', 'subroute'], true))\n```\n\nThis is useful for strict matching of a sub-route path.\n\nNote that a convenience Toggle, `RouteToggle` exists to match a route:\n\n```javascript\nimport RouteToggle from 'ion-router/RouteToggle'\n\nexport RouteToggle('routename', state => otherconditions())\n```\n\nThis selector returns true if the route specified by `'routename'` is active\n\n#### noMatches\n```javascript\nimport * as selectors from 'ion-router/selectors'\nimport Toggle from 'ion-router/Toggle'\n\nexport Toggle(state => selectors.noMatches(state))\n```\n\nThis selector returns true if no routes match, and can be used for an error component\nor default component\n\n#### stateExists\n\n```javascript\nimport * as selectors from 'ion-router/selectors'\nimport Toggle from 'ion-router/Toggle'\n\nexport Toggle(state => state.whatever, state => selectors.stateExists(state, /* state descriptor */))\n```\n\nThis toggle is designed to be used to detect whether state has loaded.  Pass in\na skeleton of the state shape and it will traverse the state to determine whether it exists.\n\nHere is a sample from an actual project:\n\n```javascript\nimport Toggle from 'ion-router/Toggle'\nimport * as selectors from 'ion-router/selectors'\n\nexport const check = state => selectors.stateExists(state, {\n  campers: {\n    ids: []\n  },\n  groups: {\n    ids: [],\n    groups: {},\n    selectedGroup: (group, state) => {\n      if (!group) return true\n      if (state.groups.ids.indexOf(group) === -1) return false\n      const g = state.groups.groups[group]\n      if (!g) return false\n      if (g.type && !state.ensembleTypes.ensembleTypes[g.type]) return false\n      if (g.members.length) {\n        if (g.members.some(m => m ? !state.campers.campers[m] : false)) return false\n      }\n      return true\n    }\n  },\n  ensembleTypes: {\n    ids: [],\n  },\n})\n\nexport default Toggle(state => state.groups.selectedGroup, check)\n```\n\nThe selector verifies that the campers and ensembleTypes state areas have an ids\nmember that is an array, and that the groups state area has ids and groups set up.\nFor selectedGroup, a callback is called, passed the value of the state item plus the\nentire state tree. The callback verifies that the selected group's state is internally\nconsistent and when everything is set up, returns true.\n\n### What about complex routes like react-router nested `<Route>`?\n\nFor a complex application, there will be components that should only display on certain\nroutes.  For example, an example from the react-router documentation:\n\n```javascript\nrender((\n  <Router history={browserHistory}>\n    <Route path=\"/\" component={App}>\n      <Route path=\"about\" component={About}/>\n      <Route path=\"users\" component={Users}>\n        <Route path=\"/user/:userId\" component={User}/>\n      </Route>\n      <Route path=\"*\" component={NoMatch}/>\n    </Route>\n  </Router>\n), document.getElementById('root'))\n```\n\nThere are 3 things happening here.\n\n 1. The App structure is dictated by the declaration of routes.  \n 2. The `App` component will have as its `children` prop set to `About` or `Users` or\n    `NoMatch`, depending on the url.   \n 3. In addition, if the route is `/user/123` the `App` component\n    will have its children set to `Users` with its children set to `User`\n\nThis complexity is forced by the design of react-router.  How can we express these routes\nusing ion-router?\n\nWe need 2 things:\n\n 1. Toggles for routes and for selected user, and for no match\n 2. Plugging in the Toggles where they should be displayed within the React tree.\n\n```javascript\nimport * as selectors from 'ion-router/selectors'\nimport Toggle from 'ion-router/Toggle'\nimport RouteToggle from 'ion-router/RouteToggle'\n\nconst AboutToggle = RouteToggle('about')\nconst UsersToggle = RouteToggle(['users', 'user'])\nconst SelectedUserToggle = Toggle(state => !!state.users.selectedUser,\n  state => usersLoaded(state) && state.users.user[state.users.selectedUser])\nconst NoMatchToggle = Toggle(state => selectors.noMatches(state))\n```\n\nNow, to plug them in:\n\nApp.js\n```javascript\n// App class render:\n  render() {\n    return (\n      <div>\n        <AboutToggle component={About} />\n        <UsersToggle component={UsersRoute} />\n        <NoMatchToggle component={NoMatch} />\n      </div>\n    )\n  }\n```\n\nRoutes.js:\n```javascript\nimport React from 'react'\nimport Routes from 'ion-router/Routes'\nimport Route from 'ion-router/Route'\nimport * as actions from './actions'\n\nconst paramsFromState = state => ({ userId: state.users.selectedUser || undefined })\nconst stateFromParams = params => ({ userId: params.userId || false })\nconst updateState = {\n  userId: id => actions.setSelectedUser(id)\n}\nconst exitParams = {\n  userId: undefined\n}\n\nexport default () => (\n  <Routes>\n   <Route name=\"about\" path=\"/about\" />\n   <Route name=\"users\" path=\"/users\" />\n   <Route name=\"user\" path=\"/user/:userId\"\n     paramsFromState={paramsFromState}\n     stateFromParams={stateFromParams}\n     exitParams={exitParams}\n     updateState={updateState}\n   />\n  </Routes>\n)\n```\n\nNote that the `else` prop of a Toggle higher order component can be used to display an\nalternative component if the state test is not satisfied, but the component state is loaded.\nSo in our example, we want to display the user list if a user is not selected, so we set our\n`else` to `Users` and our `component` to `User`\n\nUsersRoute.js:\n```javascript\n  render() {\n    return (\n      <div>\n        <SelectedUserToggle component={User} else={Users}/>\n      </div>\n    )\n  }\n```\n\n### Dynamic Routes\n\nSometimes, it is necessary to implement dynamic routes that are calculated from a parent\nroute. This can be done quite easily.\n\n```javascript\n// parent route\nconst Parent = () => (\n  <Routes>\n   <Route name=\"parent\" path=\"/parent/path\" />\n  </Routes>\n)\n// dynamically loaded later\nconst Child = ({ parentroute }) => (\n  <Routes>\n    <Route name=\"child\" parent={parentroute} path=\":hi\" />\n  </Routes>\n)\n```\n\nIn this case, the child will make its path match `/parent/path/:hi`\n\n### `enter`/`exit` hooks\n\nTo implement enter or exit hooks you can listen for the `ENTER_ROUTES` or\n`EXIT_ROUTES` action to perform actions such as loading asynchronous state.\nHere is a sample implementation:\n\n```javascript\nimport * as types from 'ion-router/types'\n\nfunction *enter() {\n  while (true) {\n    const action = yield take(types.ENTER_ROUTE)\n    if (action.payload.indexOf('myroute') === -1) continue\n    // enter code goes here\n    do {\n      const second = yield take(types.EXIT_ROUTE)\n    } while (second.payload.indexOf('myroute') === 1)\n    // exit code goes here\n  }\n}\n```\n\nAnything can be done in this code, including forcing a route to change, like a traditional\nenter/exit hook.  Because it is so trivial to implement this with the above code, the\nevent loop that listens for URL changes and state changes does not listen for enter/exit\nhooks directly.\n\n#### updating state on route exit\n\nAll routes that accept parameters and map them to state will need to unset that state\nupon exiting the route.  ion-router can do this automatically for any\nroute with only optional parameters, such as:\n\n`/path(/:optional(/:second_optional))`\n\nHowever, for routes that have a required parameter such as:\n\n`/path/:required`\n\nyou need to tell the router how to handle this case.  If the required parameter should\nbe simply set to undefined upon exiting, then you need to explicitly pass this\ninto the `exitParams` prop for `<Route>`\n\n```javascript\nexitParams = {\n  required: undefined\n}\nconst Routes = () => (\n  <Routes>\n    <Route\n      name=\"test\"\n      path=\"/path/:required\"\n      stateToParams={...}\n      paramsToState={...}\n      updateState={...}\n      exitParams={exitParams}\n    />\n  </Routes>\n)\n```\n\nIf you wish to dynamically set up the parameters based on existing parameters, pass\nin a function that accepts the previous url's params as an argument and returns the\nexit params:\n\n```javascript\nexitParams = params => ({\n  required: params.required,\n  optional: undefined\n})\nconst Routes = () => (\n  <Routes>\n    <Route\n      name=\"test\"\n      path=\"/path/:required(/:optional)\"\n      stateToParams={...}\n      paramsToState={...}\n      updateState={...}\n      exitParams={exitParams}\n    />\n  </Routes>\n)\n```\n\n### Code splitting and asynchronous loading of Routes\n\nRoutes can be loaded at any time.  If you load a new component asynchronously (using\nrequire.ensure, for instance), and dynamically add a new `<Routes><Route>...` inside that\ncomponent, the router will seamlessly start using the route.  Code splitting has never\nbeen simpler.\n\n### Server-side Rendering\n\nWhen rendering routes on the server, there are 2 options.  No changes need be made\nto the component source.  However, because of the way server rendering works, multiple\nactions and re-renders will occur when setting up routes.  To avoid the performance\npenalty for complex applications, an optional third parameter to the router setup\ncan be used to pass in the routes.  The definition of routes is an object with the\nsame keys as the props one would pass to a `<Route>` tag.\n\nso instead of:\n\n```javascript\n// set up our router\nmakeRouter(connect, store)\n\nexitParams = params => ({\n  required: params.required,\n  optional: undefined\n})\nconst Routes = () => (\n  <Routes>\n    <Route\n      name=\"test\"\n      path=\"/path/:required(/:optional)\"\n      stateToParams={...}\n      paramsToState={...}\n      updateState={...}\n      exitParams={exitParams}\n    />\n  </Routes>\n)\n```\n\none would use:\n\n\n```javascript\nexitParams = params => ({\n  required: params.required,\n  optional: undefined\n})\n\n// set up our router\nmakeRouter(connect, store, [{\n  name: 'test',\n  path: '/path/:required(/:optional)',\n  stateToParams=...,\n  paramsToState=...,\n  updateState={...},\n  exitParams={exitParams},\n}])\n\n```\n\nThe same setup can be used on both client and server for root routes, so there is no\nneed to keep the `<Routes>` and `<Route>` elements in your component tree if\nyou choose to initialize on start-up.  You should continue to use the components for\ndynamic routes loaded later.\n\n### Explicitly changing URL\n\nA number of actions are provided to change the browser state directly, most useful\nfor menus and other direct links.\n\nion-router uses the [history](https://github.com/mjackson/history) package\ninternally.  The actions mirror the push/replace/go/goBack/goForward methods as\ndocumented for the history package.\n\n```javascript\nimport * as actions from 'ion-router/actions'\ndispatch(actions.push('/path/to/go/to/next'))\ndispatch(actions.goBack())\n// etc.\n```\n\n## Animating page changes\n\nion-router makes animating page changes possible and is not opinionated about the\nanimation library. To enable animations, pass in the animating component\nas a wrapper. For example, with ReactCSSTransitionGroup:\n\n```javascript\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Toggle from 'ion-router/Toggle'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\n\n\nimport Concert from './Concert'\nimport ConcertList from './ConcertList'\n\nconst ConcertToggle = Toggle(state => state.concerts.selected,\n  state => !state.concerts.selected || state.concerts.concerts[state.concerts.selected])\n\nconst Loading = () => <div>Loading...</div>\nconst wProps = {\n  transitionName: \"concert\",\n  transitionAppear: true,\n  transitionAppearTimeout: 500,\n  transitionEnterTimeout: 500,\n  transitionLeave: true,\n  transitionLeaveTimeout: 500,\n  transitionEnter: true\n}\nexport class Tour extends PureComponent {\n  static propTypes = {\n    select: PropTypes.func.isRequired,\n    upcoming: PropTypes.array.isRequired\n  }\n\n  render() {\n    return (\n      <div className=\"Tour\">\n        <div className=\"csq\"/>\n        <h1 className=\"App-h1 shadow\">Concerts</h1>\n        <ConcertToggle\n          wrapper={ReactCSSTransitionGroup}\n          wrapperProps={wProps}\n          component={Concert}\n          else={ConcertList}\n          loadingComponent={Loading}\n      </div>\n    )\n  }\n}\n```\n\nion-router sets the key of your component to \"component\", of the\nelse component to \"else\" and the loading component to \"loading\" to\nallow the animation wrapper to easily detect when your component is\nloaded or removed.\n\nThe above code renders as:\n\n```javascript\n  const code = <ReactCSSTransitionGroup\n     transitionName=\"concert\"\n     transititionAppear={true}\n     transitionAppearTimeout={500}\n     transitionEnterTimeout={500}\n     transitionLeave={true}\n     transitionLeaveTimeout={500}\n     transitionEnter={true}\n   >\n     <Concert key=\"component\"/>\n     {/* or <ConcertList key=\"else\"/>*/}\n     {/* or <Loading key=\"loading\"/>*/}\n   </ReactCSSTransitionGroup>\n```\n\n## Why a new router?\n\n[react-router](https://github.com/ReactTraining/react-router) is a mature router for\nReact that has a huge following and community support. Why create a new router?\nIn my work with react-router, I found that it was not possible to achieve\nsome basic goals using react-router. I couldn't figure out a way to store state from\nurl parameters and easily change the url from the state when using redux. It is the\nclassic two-way binding issue: if there are 2 sources of state, they will fight and\ncause unexpected bugs.\n\nIn addition, I moved to redux for state because the tree of components in React rarely\ncorresponds to the way data is used.  In many cases, I find myself rendering different\nportions of the component tree using the same data. So I will have 2 React components\nin totally different parts of the component tree using the same piece of data.\nWith react-router, I found myself duplicating a lot of content with a single component,\nor using complex routing rules to enable displaying this information.  react-router\nversion 4 allows declaring the same route multiple times throughout the code, but\nthis can make things more confusing, and opens up another vector for bugs since\nroute information must be duplicated wherever it is used.\n\nWith ion-router, multiple components can respond to a route change anywhere\nin the React component tree, allowing for more modular design.  The below solution\nis more performant both because the components\nare not rendered at all if the route is not satisfied.\n\n```javascript\nimport React from 'react'\nimport Routes from 'ion-router/Routes'\nimport Route from 'ion-router/Route'\nimport Toggle from 'ion-router/Toggle'\nimport { connect } from 'react-redux'\n\nimport * as actions from './actions'\n\nconst albumRouteMapping = {\n  stateFromParams: params => ({ id: params.album, track: +params.track }),\n  paramsFromState: state => ({\n    album: state.albums.selectedAlbum.id,\n    track: state.albums.selectedTrack ? state.albums.selectedTrack : undefined\n  }),\n  updateState: {\n    id: id => actions.selectAlbum(id),\n    track: (track, state) => state.id && actions.playTrack(track)\n  }\n}\n\nconst TrackToggle = Toggle(state => state.albums.selectedTrack,\n                           state => state.albums.selectedTrack\n                            && state.albums.allTracks[state.albums.selectedTrack].loading)\nconst AlbumToggle = Toggle(state => state.albums.selectedAlbum)\n\nconst AlbumList = ({ albums, selectAlbum }) => (\n  <ul>\n    {albums.map(album => <li key={album.id} onClick={selectAlbum(album.id)}>{album.name}</li>)}\n  </ul>\n)\n\nconst AlbumDetail = ({ album, playTrack }) => (\n  <ul>\n    <li>Album details</li>\n    <li>...(stuff from the {album.name}</li>\n    {album.tracks.map(track => <li key={track.id} onClick={playTrack(track.id)}>{track.name}</li>)}\n  </ul>\n)\n\nconst AlbumSummary = ({ album }) => {\n  <h1>\n    {album.name}\n  </h1>\n}\n\nconst TrackPlayer = ({ track }) => {\n  <div>\n    <h1>{track.title}</h1>\n    <AudioPlayer audio={track.audio} /> \x3c!-- pretend this exists --\x3e\n  </div>\n}\n\nconst AlbumSummaryContainer = connect(state => ({ album: state.albums.selectedAlbum }))(AlbumSummary)\nconst AlbumListContainer = connect(state => ({ albums: state.albums.allAlbums }),\n                                   dispatch => ({ selectAlbum: id => dispatch(actions.selectAlbum(id)) }))(AlbumList)\nconst AlbumDetailContainer = connect(state => ({ album: state.albums.selectedAlbum }),\n                                     dispatch => ({ playTrack: id => dispatch(actions.selectTrack(id)) }))(AlbumDetail)\nconst TrackPlayerContainer = connect(state => ({ track: state.albums.tracks[state.albums.selectedTrack] }))(TrackPlayer)\n\nconst MyComponent = () => (\n  <div>\n    <Routes>\n      <Route name=\"main\" path=\"/\" />\n      <Route name=\"albumlist\" path=\"/albums(/album/:album(/track/:track))\"\n             {...albumRouteMapping}\n      />\n    </Routes>\n    <TwoPanelLayout>\n      <Panel>\n        <AlbumToggle component={AlbumSummaryContainer} />\n        <TrackToggle component={TrackPlayerContainer} />\n      </Panel>\n      <Panel>\n        <AlbumToggle component={AlbumDetailContainer} else={AlbumListContainer} />\n      </Panel>\n    </TwoPanelLayout>\n  </div>\n)\n```\n\nIn addition, declaring new routes in asynchronously loaded code is trivial with this\ndesign.  One need only put in `<Routes>` declarations in the child code and the new routes\nwill be added, and also automatically removed if the child code is removed from the\nrender tree.\n\n## Principles\n\nMost routers start from an assumption that the url determines what part of the application\nto display.  This results in a tree of urls mapping to components.  Because routes\nare defined by the URL, it then becomes necessary to provide hooks and an index route, and\nan unknown route and so on and so forth.\n\nHowever clever one is, this results in a very subtle logic flaw when using redux.  Redux-based\napplications consider the store state to be a single source of truth.  As such, general \nstate is not stored inside components, or pulled out of the client-side database or the\nurl state from pushState/popState.  [Read more about the state debate](https://github.com/reactjs/redux/issues/1287).\n\n### URL state is just another asynchronous input to redux state\n\nWe are trained to think of the browser URL as some kind of magic all-knowing state container.\nSimply because it is there and the user can directly change it to any value. But how different\nis this really than a database accessed on the server via asynchronous xhr? Or even\nsynchronous localStorage?  Let's stop thinking of the URL as a state container.  It\nis an input that we can use to create state.\n\n### When the URL changes, it should cause a state change in the redux store\n\nWe want our URL to change the way the application works.  This allows users to bookmark a\nparticular view, such as an email (/inbox/message/243) or a particular todo list filter\n(/todos/all or /todos/search/house)\n\n### When the state changes in the redux store, it should be reflected in the URL\n\nIf a user clicks on something that affects the application state by triggering an action,\nsuch as selecting an email to view, we want the URL to then update so the user can bookmark\nthat application state or share it.\n\nThis single principle is the reason for the existence of this router.\n\n### Route definition is separate from the components\n\nBecause URL state is just another input to the redux state, we only need to define\nhow to transform URLs into redux state.  Components then choose whether to render based\non that state.  This is a crucial difference from every other router out there.\n\n### Components are explicitly used where they go, and can be moved anywhere\n\nWith traditional routers, you must render the component where the route is declared.\nThis creates rigidity.  In addition, with programs based on react-router, the link\nbetween where a component exists and the route lives in the router.  The only indication\nthat something \"routey\" is happening is the presence of `{this.props.children}` which\ncan make debugging and technical debt higher.  This router restores the natural tree and\nlayout of a React app: you use the component where it will actually be rendered in the\ntree.  Less technical debt, less confusion.\n\nThe drawback is that direct connection between URL and component is less obvious.  The\ntradeoff seems worth it, as the URL is just another input to the program.  Currently,\nthe relationship between database definition and component is just as opaque, and that\nworks just fine, this is no different.\n\n### IndexRoute, Redirect and ErrorRoute are not necessary\n\nUse Toggle and smart (connected) components to do all of this logic.  For example, an\nerror route is basically a toggle that only displays when other routes are not selected.\nYou can use the `noMatches` selector for this purpose.  An indexRoute can be implemented\nwith the `matchedRoute('/')` selector (and by defining a route for '/').\n\nA redirect can be implemented simply by listening for a URL in a saga and pushing a new\none:\n\n```javascript\nimport { replace } from 'ion-router'\nimport { ROUTE } from 'ion-router/types'\nimport { take, put } from 'redux-saga/effects'\nimport { createPath } from 'history'\nimport RouteParser from 'route-parser' // this is used internally\n\nfunction *redirect() {\n  while (true) {\n    const action = yield (take(ROUTE))\n    const parser = new RouteParser('/old/path/:is/:this')\n    const newparser = new RouteParser('/new/:is/:this')\n    const params = parser.match(createPath(action))\n    if (params) {\n      yield put(replace(newparser.reverse(params)))\n    }\n  }\n}\n```\n\n### Easy testing\n\nEverything is properly isolated, and testable.  You can easily unit test your route\nstateFromParams and paramsFromState and updateState properties.  Components are\nsimply components, no magic.\n\nTo set up routes for testing in a unit test, the `synchronousMakeRoutes` functions is\navailable.  Pass in an array of routes, and use the return in the reducer\n\n```javascript\nimport { synchronousMakeRoutes, routerReducer } from 'ion-router'\n\ndescribe('some component that uses routes', () => {\n  let fakeState\n  beforeEach(() => {\n    const action = synchronousMakeRoutes([\n      {\n        name: 'route1',\n        path: '/route1'\n      },\n      {\n        name: 'route1',\n        path: '/route2/:thing',\n        stateToParams: state => state,\n        paramsToState: params => params,\n        update: {\n          thing: thing => ({ type: 'changething', payload: thing })\n        }\n      }\n    ])\n    fakeState = {\n      routing: routerReducer(undefined, action)\n    }\n  })\n  it('test something', () => {\n    // use components that have <Link> or <Toggle>\n  })\n})\n```\n\nYou will need to set this up for any `<Link>` components that use route to generate\nthe path, and any components that contain `<Router>` or `<Route>` tags when rendering\nthem.\n\n## License\n\nMIT License\n\n## Thanks\n\n[![http://www.browserstack.com](https://www.browserstack.com/images/layout/browserstack-logo-600x315.png)](http://www.browserstack.com)\n\nHuge thanks to [BrowserStack](http://www.browserstack.com) for providing\ncross-browser testing on real devices, both automatic testing and manual testing.");G.Routes.displayName="FancyRoutes",B.Link.displayName="FancyLink";var ze=function(){var e=Object(r.useState)(!1),t=Object(Pe.a)(e,2),n=t[0],o=t[1];return s.a.createElement("div",{className:"App"},s.a.createElement(Ue.scaleRotate,{pageWrapId:"page-wrap",outerContainerId:"outer-container",isOpen:n,onStateChange:function(e){var t=e.isOpen;return o(t)}},s.a.createElement(B.Link,{to:"/",className:"menu-item",onClick:function(){return o(!1)}},"Home"),s.a.createElement(B.Link,{route:"examples",className:"menu-item",onClick:function(){return o(!1)}},"Examples"),s.a.createElement("ul",null,Object.keys(Le).map(function(e){return s.a.createElement("li",{key:e},s.a.createElement(B.Link,{route:"examples",example:e,className:"menu-item",onClick:function(){return o(!1)}},Le[e].name))}))),s.a.createElement("div",{id:"outer-container"},s.a.createElement("div",{id:"page-wrap"},s.a.createElement("div",{className:"App-header"},s.a.createElement("h2",null,"ion-router")),s.a.createElement("div",{className:"App-intro"},s.a.createElement(Ye,{component:Ve,else:function(){return s.a.createElement(Xe,{text:Je})}})))),s.a.createElement(G.Routes,null,s.a.createElement(W.Route,{name:"home",path:"/"},s.a.createElement(W.Route,{name:"examples",path:"examples(/:example)",stateFromParams:function(e){return e},paramsFromState:function(e){return e},updateState:{example:function(e){return function(e){return{type:J,payload:e}}(e)}}}))))},Ke=(n(333),Object.keys(Le).reduce(function(e,t){return Object(a.a)({},e,Object(o.a)({},t,Le[t].reducer))},{})),Qe=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||c.c,Ze=Object(c.b)(Object(a.a)({routing:Y.a,examples:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:z,t=arguments.length>1?arguments[1]:void 0;if(!t||!t.type)return e;switch(t.type){case J:return Object(a.a)({},e,{example:t.payload});default:return e}}},Ke)),et=I(),tt=Object(c.d)(Ze,void 0,Qe(et));u.a.render(s.a.createElement(l.a,{store:tt},s.a.createElement(p.a,{store:tt},s.a.createElement(ze,null))),document.getElementById("root"))},38:function(e,t,n){"use strict";var o=n(0),a=n.n(o),r=n(39),s=n.n(r);function i(e){var t=e.children;return a.a.createElement(a.a.Fragment,null,t)}t.a=i,i.propTypes={children:s.a.any}},40:function(e,t,n){e.exports=n(31)},42:function(e,t,n){e.exports=n(2)},45:function(e,t,n){"use strict";n.r(t),n.d(t,"Routes",function(){return d});var o=n(18),a=n(0),r=n.n(a),s=n(39),i=n.n(s),u=n(2),c=n(4),l=n(16);function d(e){var t=e.children,n=Object(a.useRef)([]),s=Object(c.e)(),i=Object(c.c)(),d=Object(c.d)(function(e){return e.routing.routes.routes}),p=Object(a.useCallback)(function(e){n.current.push(e),s.routerOptions.isServer&&i(u.addRoute(e))},[i,s]),h=Object(a.useState)({dispatch:i,routes:d,addRoute:p,store:s}),m=Object(o.a)(h,2),g=m[0],f=m[1];return Object(a.useEffect)(function(){f({dispatch:i,routes:d,addRoute:p,store:s})},[i,d,s,p]),Object(a.useEffect)(function(){return n.current.length&&i(u.batchRoutes(n.current)),function(){n.current.length&&i(u.batchRemoveRoutes(n.current))}},[n.current]),r.a.createElement(l.a.Provider,{value:g},t)}d.propTypes={children:i.a.any},t.default=d},47:function(e,t,n){"use strict";n.r(t),n.d(t,"Link",function(){return g});var o=n(1),a=n(18),r=n(27),s=n(0),i=n.n(s),u=n(33),c=n.n(u),l=n(17),d=n.n(l),p=n(2),h=n(16);var m=["download","hreflang","referrerPolicy","rel","target","type","id","accessKey","className","contentEditable","dir","draggable","hidden","lang","spellcheck","style","tabIndex","title"];function g(e){var t=e.to,n=e.replace,u=e.onClick,l=e.href,g=e.children,f=e.route,y=Object(r.a)(e,["to","replace","onClick","href","children","route"]),b=Object(s.useContext)(h.a),v=Object(s.useState)(!!b&&function(e,t){return!(!e||!t.routes[e])&&new c.a(t.routes[e].path)}(f,b)),T=Object(a.a)(v,2),R=T[0],E=T[1];Object(s.useEffect)(function(){f&&b&&b.routes[f]&&E(new c.a(b.routes[f].path))},[f,b]);var w=Object(s.useCallback)(function(e){var a;e.preventDefault();var r=n?"replace":"push";a=f?R&&R.reverse(Object(o.a)({to:t,replace:n,href:l},y))||"":n||(t||""),b&&b.dispatch(p[r](a)),u&&u(e)},[n,f,R,t,b,l,y]),k=Object.keys(e).reduce(function(t,n){return m.includes(n)&&(t[n]=e[n]),"data-"===n.slice(0,5)&&(t[n]=e[n]),t},{});d()(!l,'href should not be passed to Link, use "to," "replace" or "route" (passed "%s")',l);var x,O=n||t||"";return R?O=R.reverse(e)||"":(x=O)&&x.pathname&&(O="".concat(O.pathname).concat(""+O.search).concat(""+O.hash)),i.a.createElement("a",Object.assign({href:O,onClick:w},k),g)}t.default=g},48:function(e,t,n){"use strict";n.r(t),n.d(t,"fakeRouteHelper",function(){return u}),n.d(t,"Route",function(){return l});var o=n(1),a=n(27),r=n(0),s=n.n(r),i=n(16);function u(){return{}}var c={paramsFromState:u,stateFromParams:u,updateState:{}};function l(e){var t=Object(r.useContext)(i.a),n=Object(r.useRef)(!1),u=e.parent,l=e.parentUrl,d=e.children,p=Object(a.a)(e,["parent","parentUrl","children"]),h=l;u&&t&&t.routes&&t.routes[u]&&(h=t.routes[u].path);var m=h&&"/"===h[h.length-1]?"":"/",g=h?"".concat(h).concat(m).concat(p.path):p.path;return!n.current&&t&&(t.addRoute(Object(o.a)({},c,p,{parent:u,path:g})),n.current=!0),s.a.createElement("div",{style:{display:"none"}},d&&r.Children.map(d,function(e){return s.a.cloneElement(e,{parentUrl:g})}))}t.default=l},49:function(e,t,n){"use strict";n.r(t),n.d(t,"RouteToggle",function(){return r});var o=n(32),a=n(8);function r(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return Object(o.default)(function(n){return a.a(n,e)&&(!t||t(n))},n,r)}t.default=r},7:function(e,t,n){e.exports=n(45)},70:function(e,t,n){},8:function(e,t,n){"use strict";function o(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(Array.isArray(t)){var o=e.routing.matchedRoutes.filter(function(e){return t.includes(e)});return n?o.length===t.length:!!o.length}return e.routing.matchedRoutes.includes(t)}n.d(t,"a",function(){return o})},92:function(e,t,n){e.exports=n(334)}},[[92,1,2]]]);
//# sourceMappingURL=main.6544a315.chunk.js.map